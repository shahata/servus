#!/usr/bin/env node

'use strict';

var fs = require('fs');
var path = require('path');
var nopt = require('nopt');
var chalk = require('chalk');
var servus = require('../lib');
var updateNotifier = require('update-notifier');

var notifier = updateNotifier({packagePath: '../package.json', callback: function (error, update) {
  if (update && update.current !== update.latest) {
    notifier.update = update;
    notifier.notify();
  }
}});

var knownOpts = {
    help: Boolean,
    port: Number,
    cors: Boolean,
    gzip: Boolean,
    open: String,
    init: Boolean,
    version: Boolean
  },
  shortOpts = {
    h: ['--help'],
    p: ['--port'],
    x: ['--cors'],
    z: ['--gzip'],
    o: ['--open']
  },
  options = nopt(knownOpts, shortOpts);

if (options.help) {
  console.log('\n'+chalk.yellow.bold('Servus')+' ('+chalk.cyan('Slovak')+': '+chalk.magenta('Servus')+', '+chalk.cyan('Croatian')+': '+
              chalk.magenta('Serbus')+' or '+chalk.magenta('Servus')+', '+chalk.cyan('Hungarian')+': '+chalk.magenta('Szervusz')+', '+
              chalk.cyan('Polish')+': '+chalk.magenta('Serwus')+', '+chalk.cyan('Austro-Bavarian')+': '+chalk.magenta('Servus')+', '+
              chalk.cyan('Romanian')+': '+chalk.magenta('Servus')+', '+chalk.cyan('Slovene')+': '+chalk.magenta('Serbus')+' or '+
              chalk.magenta('Servus')+', '+chalk.cyan('Czech')+': '+chalk.magenta('Servus')+', '+chalk.cyan('Ukrainian')+': '+
              chalk.magenta('Сервус')+') is a '+chalk.green('salutation')+' used in many parts of '+chalk.green('Central')+' and '+
              chalk.green('Eastern Europe')+'. It is a word of greeting or parting like the Italian "'+chalk.yellow('Ciao')+'".\n\n'+
              chalk.red('Read more at: ')+chalk.magenta('https://github.com/shahata/servus')+'\n');
} else if (options.version) {
  var pkg = require('../package.json');
  console.log(chalk.yellow.bold(pkg.name)+' '+chalk.cyan(pkg.version)+' by '+chalk.green(pkg.author.name));
  console.log(chalk.red('Read more at: ')+chalk.magenta('https://github.com/shahata/servus'));
} else if (options.init) {
  var filename = 'servus.conf.js';
  fs.createReadStream(path.join(__dirname, '..', filename))
    .on('error', function () {
      console.log(chalk.red('Error')+' generating '+chalk.bold(filename));
    })
    .on('end', function () {
      console.log(chalk.bold(filename)+' '+chalk.green('successfully created.'));
    })
    .pipe(fs.createWriteStream(filename)
      .on('error', function () {
        console.log(chalk.red('Error')+' creating '+chalk.bold(filename));
      })
    );
} else {
  servus(options);
}

